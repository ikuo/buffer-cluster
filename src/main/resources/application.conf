akka {
  loglevel = "INFO"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      hostname = ${?AKKA_HOSTNAME}
      port = 0
      port = ${?AKKA_PORT}
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://cluster@127.0.0.1:2551"
    ]

    auto-down-unreachable-after = 10s
  }
}

akka.persistence.journal.plugin = "akka.persistence.journal.leveldb"
akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"
akka.persistence.journal.leveldb.dir = target/journal_${?NODE_ID}

kamon.metric.filters {
  akka-actor {
    includes = [ "cluster/user/**" ]
    excludes = [ "cluster/system/**" ]
  }

  akka-dispatcher {
    includes = [ "**" ]
  }

  akka-router {
    includes = [ "**" ]
  }
}

counter-cluster.counter.dynamodb {
  endpoint = "http://dynamodb.ap-northeast-1.amazonaws.com"
  //endpoint = "http://localhost:8000" // DynamoDB Local
}
